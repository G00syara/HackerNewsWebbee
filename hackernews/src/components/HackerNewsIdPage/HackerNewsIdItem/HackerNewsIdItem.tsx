import React, { useState } from 'react';
import { NewsItem } from '../../../types/mainTypes';
import DOMPurify from 'dompurify';
import {
  HackerNewsItemIdContent,
  HackerNewsItemIdCountComments,
  HackerNewsItemIdUserTime,
  HackerNewsItemIdWrapper,
} from './HackerNewsIdItem.styled';

interface HackerNewsIdItemProps {
  comment: NewsItem;
  handleClickOpen: (id: number) => void;
  handleClickClose: (id: number) => void;
}

const HackerNewsIdItem: React.FC<HackerNewsIdItemProps> = ({ comment, handleClickClose, handleClickOpen }) => {
  const [isOpen, setIsOpen] = useState(false);
  const treatedContent = DOMPurify.sanitize(comment.content);

  comment.open = isOpen;

  if (comment.dead || comment.deleted) {
    return <></>;
  } else {
    return (
      <HackerNewsItemIdWrapper>
        <HackerNewsItemIdUserTime>{`${comment.user} | ${comment.time_ago}`}</HackerNewsItemIdUserTime>
        {/*–ß—Ç–æ–±—ã –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å string –≤ Html */}
        <HackerNewsItemIdContent dangerouslySetInnerHTML={{ __html: treatedContent }}></HackerNewsItemIdContent>

        {/*–ù—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å 2 –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞, —á—Ç–æ–±—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Ä–∞–±–æ—Ç–∞–ª–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–∫–∞–∑–∞—Ç—å –∏ —Å–∫—Ä—ã—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏*/}
        <HackerNewsItemIdCountComments
          onClick={() => {
            setIsOpen(true);
            Promise.resolve().then(() => handleClickOpen(comment.id));
          }}
        >
          {comment.comments_count > 0 && !comment.open ? `üëâ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ ${comment.comments_count}` : ''}
        </HackerNewsItemIdCountComments>
        <HackerNewsItemIdCountComments
          onClick={() => {
            setIsOpen(false);
            Promise.resolve().then(() => handleClickClose(comment.id));
          }}
        >
          {comment.open && comment.comments_count > 0 ? `üëá –°–∫—Ä—ã—Ç—å` : ''}
        </HackerNewsItemIdCountComments>
      </HackerNewsItemIdWrapper>
    );
  }
};

export default React.memo(HackerNewsIdItem, (prevProp, nextProp) => {
  if (prevProp.comment.open !== nextProp.comment.open) {
    return false;
  }
  return true;
});
